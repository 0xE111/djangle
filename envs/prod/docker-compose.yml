version: '3.6'

services:

  redis:
    image: redis:6-alpine
    env_file: .env
    command: redis-server --appendonly yes
    healthcheck:
      test: redis-cli ping
    volumes:
      - redis:/data
    restart: on-failure

  postgres:
    image: postgres:12-alpine
    env_file: .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: on-failure

  app:
    build: .
    image: app
    env_file: .env
    volumes:
      - static:/home/static
      - media:/home/media
    healthcheck:
      test: wget -q 127.0.0.1:8000
    depends_on:
      - redis
      - postgres
    restart: on-failure

  celery-worker:
    image: app
    env_file: .env
    environment:
      - DEBUG=off
    command: celery -A core worker -l INFO --pidfile= --concurrency=4
    links:
      - redis:redis
    depends_on:
      - redis

  celery-beat:
    image: app
    env_file: .env
    environment:
      - DEBUG=off
    command: celery -A core beat -l INFO --schedule /tmp/celerybeat-schedule -f /tmp/logs/celery-beat.log
    volumes:
      - ./logs:/tmp/logs
    links:
      - redis:redis
    depends_on:
      - redis
      - celery-worker
    restart: on-failure

  celery-flower:
    image: app
    healthcheck:
      test: wget -q 0.0.0.0:80
    env_file: .env
    environment:
      - DEBUG=off
    command: celery flower --app=core --broker="${CELERY_BROKER_URL}" --basic_auth="${CELERY_FLOWER_USER}:${CELERY_FLOWER_PASSWORD}"
    depends_on:
      - celery-worker
    ports:
      - 5555:5555
    restart: on-failure

  nginx:
    build: nginx
    env_file: .env
    environment:
      - HOST=${HOST}
      - EMAIL=${EMAIL}
    volumes:
      - static:/home/static
      - media:/home/media
      - letsencrypt:/etc/letsencrypt
    depends_on:
      - app
    ports:
      - 80:80
      - 443:443
    restart: on-failure

volumes:
  redis:
  postgres:
  static:
  media:
  letsencrypt:
